{"version":3,"sources":["recap/css.cljc"],"mappings":";AAKA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA,AACQ,AACA,AACA,AACA;AAEb,AAAKC,AACH;AAEF;;;AAAKC,AAEH,AAAMC,AACY,AAAA,AAAAE,AAACC;AAAD,AAAM,AAAA,AAAA,AAAuB,AAAAD,AAACE;AAD9B,AAACH,AAAKJ;AAElBQ,AAAO,AAAA,AAAA,AAACC,AAAkBR;AAFhC,AAGO,AAACS,AAAKV,AACN,AAACW,AAAWR,AACZ,AAAA,AAACS,AAAMC,AAAqCL","names":["recap.css/resources","recap.css/default-theme","recap.css/shadow-style","titles","cljs.core/keys","p1__53875#","cljs.core.map","cljs.core/name","theme","clojure.string/replace-first","cljs.core/vals","cljs.core.interleave","cljs.core.apply","cljs.core/str"],"sourcesContent":["(ns recap.css\n  \"CSS content available programmatically for use in the Shadow DOM.\"\n  (:require [shadow.resource :as resource]\n            [clojure.string :as str]))\n\n(def resources\n  {:carousel (resource/inline \"public/css/carousel.css\")\n   :lens     (resource/inline \"public/css/lens.css\")\n   :tabs     (resource/inline \"public/css/tabs.css\")\n   :shared   (resource/inline \"public/css/shared.css\")})\n\n(def default-theme\n  (resource/inline \"public/css/theme.css\"))\n\n(def shadow-style\n  \"The combined CSS content - including the default theme - for all widgets.\"\n  (let [titles (->> (keys resources)\n                    (map #(str \"\\n\\n/*\\n\\t === \" (name %) \".css ===\\n*/\\n\")))\n        theme  (str/replace-first default-theme \":root\" \":host\")]\n    (->> (vals resources)\n         (interleave titles)\n         (apply str \"/*\\n\\t === theme.css ===\\n*/\\n\" theme))))\n"]}