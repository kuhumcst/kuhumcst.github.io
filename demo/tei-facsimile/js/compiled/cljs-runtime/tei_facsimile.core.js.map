{"version":3,"sources":["tei_facsimile/core.cljs"],"mappings":"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","names":["tei-facsimile.core/prefix","tei-facsimile.core/tei-css","rescope.style/prefix-css","tei-facsimile.core/recap+tei-css","recap.css/shadow-style","tei-facsimile.core/da-type","type","type->s","tei-facsimile.core/list-as-ul","cuphic.core.transformer","p__53876","map__53877","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","+items","cljs.core.into","iter__4529__auto__","s__53880","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__53882","cljs.core/chunk-buffer","i__53881","vec__53883","cljs.core/-nth","seq__53884","first__53885","cljs.core/first","cljs.core/next","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__53879","cljs.core/chunk-rest","vec__53886","seq__53887","first__53888","cljs.core/cons","cljs.core/rest","tag","attr","content","tei-facsimile.core/ref-as-anchor","p__53889","map__53890","?ref","?type","tei-facsimile.core/default-fn","rescope.helpers/default-fn","tei-facsimile.core/custom-wrapper","old-node","new-node","styled-slide","cljs.core/constantly","cljs.core.vary_meta","cljs.core/assoc","rescope.core/shadow-ref","tei-facsimile.core/internal-stage","tei-facsimile.core/carousel-pbs","p__53894","map__53895","<>","bindings","map__53897","begin","end","cljs.core/meta","source","pages","cljs.core.subvec","p1__53892#","cljs.core.partition_by","cljs.core._EQ_","cljs.core.partition","cljs.core.map","cljs.core.partial","cljs.core/apply","cljs.core/concat","pp","kvs","s__53900","b__53902","i__53901","vec__53903","vec__53906","cljs.core.nth","map__53909","iter__53899","vec__53911","vec__53914","map__53917","_","n","facs","page","rewrite-kv","p__53919","vec__53920","k","v","p1__53893#","rewrite","cuphic.core/rewrite","recap.widgets.carousel/carousel","tei-facsimile.core/all-stages","tei-facsimile.core/rewrite","p1__53923#","cljs.core/memoize","tei-facsimile.core/parse","rescope.formats.xml/parse","tei-facsimile.core/tei-xml","xml","rescope.core/scope","cljs.core/chunk-first"],"sourcesContent":["(ns tei-facsimile.core\n  (:require [shadow.resource :as resource]\n            [cuphic.core :as cup]\n            [recap.css :as rc]\n            [recap.widgets.carousel :as carousel]\n            [rescope.core :as rescope]\n            [rescope.helpers :as helpers]\n            [rescope.style :as style]\n            [rescope.formats.xml :as xml]))\n\n(def prefix\n  \"tei\")\n\n(def tei-css\n  (style/prefix-css prefix (resource/inline \"css/tei.css\")))\n\n(def recap+tei-css\n  (str rc/shadow-style \"\\n\\n/*\\n\\t === tei.css ===\\n*/\\n\" tei-css))\n\n(defn da-type\n  [type]\n  (let [type->s {\"conference\" \"denne konference\"\n                 \"org\"        \"denne organisation\"\n                 \"pers\"       \"denne person\"\n                 \"place\"      \"dette sted\"\n                 \"publ\"       \"denne publikation\"\n                 \"receiver\"   \"denne modtager\"\n                 \"sender\"     \"denne afsender\"}]\n    (str \"Vis mere om \" (type->s type \"dette\"))))\n\n(def list-as-ul\n  (cup/transformer\n    :from '[:list +items]\n    :to (fn [{:syms [+items]}]\n          (into [:ul] (for [[tag attr & content] +items]\n                        (into [:li] content))))))\n\n(def ref-as-anchor\n  (cup/transformer\n    :from '[? {:ref  ?ref\n               :type ?type} *]\n    :to (fn [{:syms [?ref ?type]}]\n          ;; TODO: bug in attr-bindings - now need to check for attr existence\n          (when ?ref\n            [:a {:href  ?ref\n                 :title (da-type ?type)}\n             [:slot]]))))\n\n(def default-fn\n  (helpers/default-fn {:prefix    \"tei\"\n                       :attr-kmap {:xml:lang :lang\n                                   :xml:id   :id}}))\n\n(defn custom-wrapper\n  [old-node new-node]\n  (let [styled-slide (constantly [:<> [:style recap+tei-css] new-node])]\n    (vary-meta old-node assoc :ref (rescope/shadow-ref styled-slide))))\n\n(def internal-stage\n  {:transformers [ref-as-anchor\n                  list-as-ul]\n   :wrapper      custom-wrapper\n   :default      default-fn})\n\n;; Fairly complex transformer that restructures sibling-level page content into\n;; an interactive carousel recap component. The large amount of content captured\n;; as page content has to be explicitly rewritten in a separate call. Otherwise,\n;; it will be skipped entirely.\n(def carousel-pbs\n  (cup/transformer\n    :from '[:div * [:<> [:pb] +]]\n    :to (fn [{:syms [<>] :as bindings}]\n          (let [{:keys [begin end]} (meta <>)\n                source     (:source (meta bindings))\n                pages      (->> (subvec source begin end)\n                                (partition-by #(= :pb (first %)))\n                                (partition 2)\n                                (map (partial apply concat)))\n                pp         (count pages)\n                kvs        (for [[[_ {:keys [n facs]}] :as page] pages]\n                             [(str \"Side \" n \" af \" pp \"; facs. \" facs \".\")\n                              page])\n                rewrite-kv (fn [[k v]]\n                             (let [rewrite #(cup/rewrite % [internal-stage])]\n                               [k (into [:<>] (map rewrite v))]))]\n            [:<>\n             [cup/rewrite (subvec source 0 begin) [internal-stage]]\n             [carousel/carousel\n              {:i   0\n               :kvs (map rewrite-kv kvs)}\n              {:aria-label \"Facsimile\"}]]))))\n\n(def all-stages\n  [{:transformers [ref-as-anchor\n                   list-as-ul\n                   carousel-pbs]\n    :wrapper      custom-wrapper\n    :default      default-fn}])\n\n(def rewrite\n  (memoize #(cup/rewrite % all-stages)))\n\n(def parse\n  (memoize xml/parse))\n\n(defn tei-xml\n  \"Parse, postprocess, and display TEI.\"\n  [xml]\n  [rescope/scope (-> xml parse rewrite) tei-css])\n"]}