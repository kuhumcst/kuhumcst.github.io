{"version":3,"sources":["recap/widgets/carousel.cljc"],"mappings":"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","names":["p__52211","p__52212","map__52213","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","map__52214","recap.widgets.carousel/carousel","kvs","i","state","aria-label","aria-labelledby","opts","with-let52240","reagent.ratom/with-let-values","temp__5739__auto__","reagent.ratom/*ratom-context*","c__47351__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init52241","res__47352__auto__","recap.state/prepare","next-slide","cljs.core.swap_BANG_","cljs.core/update","cljs.core/inc","prev-slide","cljs.core/dec","map__52260","cljs.core/deref","vec__52261","cljs.core.nth","label","content","tab-panel-id","cljs.core/random-uuid","label-id","prev?","next?","cljs.core/count","cljs.core.into","recap.dom.keyboard/roving-tabindex-handler","iter__4529__auto__","s__52268","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","b__52270","cljs.core/chunk-buffer","i__52269","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__52267","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","n","cljs.core.range","selected?","cljs.core._EQ_","select","cljs.core/assoc","cljs.core/chunk-first"],"sourcesContent":["(ns recap.widgets.carousel\n  \"Reagent components for displaying slides in a carousel.\n\n  Shared state for tab components:\n    :kvs  - key-values pairs of slide labels and bodies.\n    :i    - (optional) the index of the currently selected slide.\n\n  ARIA reference:\n    https://www.w3.org/TR/wai-aria-practices-1.1/#carousel\"\n  (:require [reagent.core :as r]\n            [recap.state :as state]\n            [recap.dom.keyboard :as kbd]))\n\n;; TODO: drag-and-drop\n\n(defn carousel\n  \"Tabbed carousel with a slide picker, but without automatic slide rotation.\n  Takes `state` of the form described in the docstring of this namespace.\n\n  Optionally, certain HTML attributes specified in the `opts` may merged with\n  the carousel attr. This should be done in order to satisfy ARIA labeling\n  requirements, e.g. either :aria-label or :aria-labelledby should be set.\"\n  [{:keys [kvs i] :as state}\n   {:keys [aria-label\n           aria-labelledby]\n    :as   opts}]\n  (r/with-let [state      (state/prepare ::state/kvs+i state)\n               next-slide #(swap! state update :i inc)\n               prev-slide #(swap! state update :i dec)]\n    (let [{:keys [i kvs]} @state\n          [label content] (nth kvs i)\n          tab-panel-id (random-uuid)\n          label-id     (random-uuid)\n          prev?        (> i 0)\n          next?        (< i (dec (count kvs)))]\n      ;; This implementation most closely resembles the Tabbed Carousel:\n      ;; https://www.w3.org/TR/wai-aria-practices-1.1/#tabbed-carousel-elements\n      ;; The outer container follows the basic carousel pattern, while most of\n      ;; the inner parts resemble a regular tabs implementation.\n      [:div.carousel {:role                 \"group\"\n                      :aria-roledescription \"carousel\"\n                      :aria-label           aria-label\n                      :aria-labelledby      aria-labelledby}\n       [:button.carousel__select {:aria-label (str \"View slide number \" i) ;TODO: localisation\n                                  :tab-index  (if prev? \"0\" \"-1\")\n                                  :on-click   (when prev? prev-slide)}]\n       [:div.carousel__slide {:role            \"tabpanel\"\n                              :id              tab-panel-id\n                              :aria-labelledby label-id}\n        (when (> (count kvs) 2)\n          [:div.carousel__slide-header\n           [:div.carousel__slide-label {:id label-id} label]\n           (into [:div.slide-picker {:role        \"tablist\"\n                                     :on-key-down kbd/roving-tabindex-handler\n                                     :aria-label  \"Choose a slide to display\"}] ;TODO: localisation\n                 (for [n (range (count kvs))\n                       :let [selected? (= n i)\n                             select    #(swap! state assoc :i n)]]\n                   [:span.slide-picker__dot {:role          \"tab\"\n                                             :aria-controls tab-panel-id\n                                             :aria-selected selected?\n                                             :tab-index     (if selected?\n                                                              \"0\"\n                                                              \"-1\")\n                                             :on-click      select}]))])\n        content]\n       [:button.carousel__select {:aria-label (str \"View slide number \" (inc i)) ;TODO: localisation\n                                  :tab-index  (if next? \"0\" \"-1\")\n                                  :on-click   (when next? next-slide)}]])))\n"]}