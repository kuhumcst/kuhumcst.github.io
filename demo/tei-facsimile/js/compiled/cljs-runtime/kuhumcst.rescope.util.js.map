{"version":3,"sources":["kuhumcst/rescope/util.cljs"],"mappings":";;;AAGA;;;AAAA,AAAMA,AAEHC,AAAOC;AAFV,AAGE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMC;AAQAC,AAAc,AAAA,AAAKH,AAAWC;AARpC,AASE,AAAI,AAACG,AAAUF,AAAcC;AAC3B,AAAA,AAAKA;;AACLA;;;AAEN;;;AAAA,AAAME,AAEHC;AAFH,AAGE,AAAMA,AAAEC;AAAAA,AACF,AAACC,AAAKD;AADJA,AAEF,AAAA,AAAA,AAACE,AAAYF;AAFnB,AAGM,AAAA,AAAaA","names":["kuhumcst.rescope.util/prefixed","prefix","tag","reserved-tags","prefixed-tag","cljs.core/contains?","kuhumcst.rescope.util/data-*","k","$","cljs.core/name","clojure.string/replace"],"sourcesContent":["(ns kuhumcst.rescope.util\n  (:require [clojure.string :as str]))\n\n(defn prefixed\n  \"Add a `prefix` to an HTML `tag`, creating a valid custom HTML element name.\"\n  [prefix tag]\n  (let [reserved-tags #{\"annotation-xml\"\n                        \"color-profile\"\n                        \"font-face\"\n                        \"font-face-src\"\n                        \"font-face-uri\"\n                        \"font-face-format\"\n                        \"font-face-name\"\n                        \"missing-glyph\"}\n        prefixed-tag  (str prefix \"-\" tag)]\n    (if (contains? reserved-tags prefixed-tag)\n      (str prefixed-tag \"-x\")\n      prefixed-tag)))\n\n(defn data-*\n  \"Convert an XML attribute `k` into a data-* attribute.\"\n  [k]\n  (as-> k $\n        (name $)\n        (str/replace $ \":\" \"-\")\n        (str \"data-\" $)))\n"]}