{"version":3,"sources":["user.cljs"],"mappings":";AASA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA,AACuB,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;AAE5B,AAAKC,AACH,AAACC,AAAOF;AAEV,AAAA,AAAMG,AACHC;AADH,AAEE,AAAMC,AAAI,AAAA,AAAAC,AAACC,AAAKN,AAASG;AAAzB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACqBC,AAAMG,AAAkBH,AAGjCA;;AAEd,AAAA,AAAAI,AAAAC;AAAA;AAAA,AAAA,AAASC,AACP,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACT,AAC4B,AAAA,AAACC;;AAGhC,AAAA,AAAMS,AACHR;AADH,AAEE,AAAA,AAACS,AAAMF,AAAMG,AAAoBV;;AACjC,AAAA,AAAA,AAAA,AAACS,AAAMF,AAAMI,AAAsB,AAACZ,AAAQC;;AAE9C,AAAA,AAAMY;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKI,AAAMC,AAAa,AAAA,AAAA,AAACC,AAASP;AAA7B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAL,AAAA,AAAA,AAAAA,AAAA,AAE6BW,AACAA,AACD,AAAKE;AAAL,AAAQ,AAACP,AAAa,AAAA,AAAIO;AAClD,AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAE,AAAAJ;AAAA,AAAAK,AA+4E2C,AAAAsC,AAAA3C;AA/4E3CM,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAJ;AAAA,AAAAK,AAAA,AAAAC,AAAAP,AAAAK;AAAA,AAAAG,AAAAF,AAAA,AAAA,AAAOY;AAAP,AAAAV,AAAAF,AAAA,AAAA,AAASa;AAAT,AAAA,AAAA,AAAAV,AAAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACSe,AAAoBA,AAChBA;;AAFb,AAAA,AAAAb,AAAA;;;;AAAA;;;;;AAAA,AAAAK,AAAA,AAAAC,AAAAR,AAAA,AAAAS,AAAA,AAAAC,AAAAlB;;AAAA,AAAAe,AAAA,AAAAC,AAAAR,AAAA;;;AAAA,AAAAW,AAAA,AAAAC,AAAApB;AAAA,AAAAa,AAAAM,AAAA,AAAA,AAAOI;AAAP,AAAAV,AAAAM,AAAA,AAAA,AAASK;AAAT,AAAA,AAAAH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAJ,AAAA,AAAAK,AAAAtB,AACSuB,AAAoBA,AAChBA;;;AAFb;;;;AAAA,AAAA;;AAAA,AAAA,AAAAxB,AAAY,AAAA,AAAAd,AAACwC,AAAM7C;AALvB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAWwB,AAAKkB;AAAL,AACE,AAAAI,AAAgB,AAAA,AAAO,AAAA,AAAAJ;AAAvB,AAAA,AAAAI;AAAA,AAAA,AAAAA,AAAWwB;AAAX,AACE,AAAO,AAAOA,AACP,AAAKC;AAAL,AACE,AAACnC,AAAMZ,AAASa,AAAM,AAAQiC,AAAMC;;AACpC,AAACpC,AAAa,AAAQmC;;;AAJjC;;;AAjB9B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAyBKE,AAAU,AAAA,AAAA,AAAC/B,AAASP;;AACzB,AAAKuC,AACH,AAAA,AAACC;AAEH,AAAA,AAAuBC;AAAvB,AAGE,AAAA,AAAA3C,AAAA4C;AAAA;AAAA,AAAA,AAASC,AACP,AAAMC,AAAW,AAAA,AAACC;AACZC,AAAW,AAAA,AAAA,AAACC,AAAkBC;AADpC,AAEE,AAAM,AAAaJ,AAAOE;;AAC1B,AAACG,AAA6BL;;;;AAElC,AAAA,AAACM,AAAa7C,AAAKkC;;AAErB,AAAA,AAAMY;AAAN,AAEE,AAAA,AAACC;;AACD,AAACX","names":["user/initial-examples","user/examples","reagent.core.atom","user/mk-tabs","filename","tei","cljs.core/deref","cljs.core.get","tei-facsimile.core/tei-xml","js/user","js/user.state","user/state","user/set-content!","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core/assoc-in","user/app","current-file","reagent.core/cursor","e","iter__4529__auto__","s__53927","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__53929","cljs.core/chunk-buffer","i__53928","vec__53930","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__53926","cljs.core/chunk-rest","vec__53933","cljs.core/first","cljs.core/cons","cljs.core/rest","k","_","cljs.core.sort","file","s","recap.widgets.tabs/tabs","user/root","js/document.getElementById","user/render","js/user.add-recap-styles","user/add-recap-styles","style","js/document.createElement","root-style","clojure.string/replace-first","recap.css/shadow-style","js/document.head.appendChild","reagent.dom.render","user/start-dev","cljs.core.println","cljs.core/chunk-first"],"sourcesContent":["(ns user\n  (:require [clojure.pprint :refer [pprint]]\n            [shadow.resource :as sr]\n            [reagent.core :as r]\n            [reagent.dom :as rdom]\n            [recap.widgets.tabs :as tabs]\n            [tei-facsimile.core :as facsimile]\n            [clojure.string :as str]))\n\n(def initial-examples\n  {\"1151anno-anno-tei.xml\"  (sr/inline \"examples/tei/1151anno-anno-tei.xml\")\n   \"1152anno-anno-tei.xml\"  (sr/inline \"examples/tei/1152anno-anno-tei.xml\")\n   \"1153anno-anno-tei.xml\"  (sr/inline \"examples/tei/1153anno-anno-tei.xml\")\n   \"1154anno-anno-tei.xml\"  (sr/inline \"examples/tei/1154anno-anno-tei.xml\")\n   \"1155anno-anno-tei.xml\"  (sr/inline \"examples/tei/1155anno-anno-tei.xml\")\n   \"1156anno-anno-tei.xml\"  (sr/inline \"examples/tei/1156anno-anno-tei.xml\")\n   \"1157anno-anno-tei.xml\"  (sr/inline \"examples/tei/1157anno-anno-tei.xml\")\n   \"1158anno-anno-tei.xml\"  (sr/inline \"examples/tei/1158anno-anno-tei.xml\")\n   \"1159anno-anno-tei.xml\"  (sr/inline \"examples/tei/1159anno-anno-tei.xml\")\n   \"1160anno-anno-tei.xml\"  (sr/inline \"examples/tei/1160anno-anno-tei.xml\")\n   \"tei_example.xml\"        (sr/inline \"examples/tei/tei_example.xml\")\n   \"test-1307-anno-tei.xml\" (sr/inline \"examples/tei/test-1307-anno-tei.xml\")})\n\n(def examples\n  (r/atom initial-examples))\n\n(defn mk-tabs\n  [filename]\n  (let [tei (get @examples filename)]\n    [[\"Indhold\" ^{:key tei} [facsimile/tei-xml tei]]\n     [\"XML\" [:pre {:style {:white-space \"pre-wrap\"}}\n             [:code\n              tei]]]]))\n\n(defonce state\n  (r/atom {:current-file \"test-1307-anno-tei.xml\"\n           :tabs         {:kvs (mk-tabs \"test-1307-anno-tei.xml\")\n                          :i   0}}))\n\n(defn set-content!\n  [filename]\n  (swap! state assoc :current-file filename)\n  (swap! state assoc-in [:tabs :kvs] (mk-tabs filename)))\n\n(defn app\n  []\n  [:<>\n   [:p {:style {:display         \"flex\"\n                :justify-content \"flex-end\"}}\n    (let [current-file (r/cursor state [:current-file])]\n      [:label \"TEI-fil: \"\n       [:select {:key           @current-file\n                 :default-value @current-file\n                 :on-change     (fn [e] (set-content! (.. e -target -value)))}\n        (for [[k _] (sort @examples)]\n          ^{:key k} [:option {:value k}\n                     k])]\n       \" \"\n       [:input {:aria-label \"Lokal TEI-fil\"\n                :type       \"file\"\n                :on-change  (fn [e]\n                              (when-let [file (.item e.target.files 0)]\n                                (.then (.text file)\n                                       (fn [s]\n                                         (swap! examples assoc (.-name file) s)\n                                         (set-content! (.-name file))))))}]])]\n   [:div {:style {:max-width \"100ch\"\n                  :min-width \"40ch\"\n                  :margin    \"0 auto\"}}\n    [tabs/tabs (r/cursor state [:tabs]) {:id \"tei-tabs\"}]]])\n(def root\n  (js/document.getElementById \"app\"))\n\n(defn ^:dev/after-load render\n  []\n  ;; TODO: dumb hack - do this another way\n  (defonce add-recap-styles\n    (let [style      (js/document.createElement \"style\")\n          root-style (str/replace-first recap.css/shadow-style \":host\" \":root\")]\n      (set! (.-innerHTML style) root-style)\n      (js/document.head.appendChild style)))\n\n  (rdom/render [app] root))\n\n(defn start-dev\n  []\n  (println \"Started development environment for kuhumcst/tei-facsimile.\")\n  (render))\n"]}